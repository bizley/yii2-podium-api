<?php

return [
    'category.already.archived' => 'Category is already archived.',
    'category.not.archived' => 'Category is not archived.',
    'category.must.be.archived' => 'Category must be archived first.',
    'forum.already.archived' => 'Forum is already archived.',
    'forum.must.be.archived' => 'Forum must be archived first.',
    'forum.not.archived' => 'Forum is not archived.',
    'group.already.joined' => 'Group is already joined.',
    'group.not.exists' => 'Group does not exist.',
    'group.not.joined' => 'Group is not joined.',
    'member.already.active' => 'Member is already active.',
    'member.already.banned' => 'Member is already banned.',
    'message.already.archived' => 'Message is already archived.',
    'message.must.be.archived' => 'Message must be archived first.',
    'message.not.archived' => 'Message is not archived.',
    'message.wrong.reply' => 'Replying to wrong message.',
    'poll.already.voted' => 'Poll vote is already done.',
    'poll.not.exists' => 'Poll does not exist.',
    'poll.one.vote.allowed' => 'Poll allows only one vote.',
    'poll.wrong.answer' => 'Selected answer comes from different poll.',
    'post.already.archived' => 'Post is already archived.',
    'post.already.disliked' => 'Post is already disliked.',
    'post.already.liked' => 'Post is already liked.',
    'post.must.be.archived' => 'Post must be archived first.',
    'post.not.archived' => 'Post is not archived.',
    'post.not.exists' => 'Post does not exist.',
    'post.not.rated' => 'Post is not rated.',
    'rank.not.exists' => 'Rank does not exist.',
    'target.already.acquainted' => 'Target is already acquainted.',
    'target.not.befriended' => 'Target is not befriended.',
    'target.not.ignored' => 'Target is not ignored.',
    'thread.already.archived' => 'Thread is already archived.',
    'thread.already.subscribed' => 'Thread is already subscribed.',
    'thread.has.poll' => 'Thread already has a poll.',
    'thread.must.be.archived' => 'Thread must be archived first.',
    'thread.not.archived' => 'Thread is not archived.',
    'thread.not.exists' => 'Thread does not exist.',
    'thread.not.subscribed' => 'Thread is not subscribed.',
];
